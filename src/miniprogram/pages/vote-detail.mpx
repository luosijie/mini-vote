<template>
  <view class="main">
    <input
      class="title"
      type="text"
      placeholder="请在这里输入标题"
      wx:model="{{ formData.title }}"
    />
    <textarea
      class="desc"
      type="textarea"
      placeholder="请在这里输入描述信息"
      auto-height="{{true}}"
      wx:model="{{ formData.desc }}"
    />
    <view class="line" />
    <view class="form-item">
      <view class="label">选择开始日期</view>
      <picker mode="date" bindchange="setFormData('startTime', $event)">
        <view class="value">{{ formData.startTime }}</view>
      </picker>
    </view>
    <view class="form-item">
      <view class="label">选择结束日期</view>
      <picker mode="date" bindchange="setFormData('endTime', $event)">
        <view class="value">{{ formData.endTime }}</view>
      </picker>
    </view>
    <view class="form-item">
      <view class="label">最少投票数</view>
      <view class="value">
        <input type="number" value="1" bindchange="setFormData('min', $event)" />
      </view>
    </view>
    <view class="form-item">
      <view class="label">最多投票数</view>
      <view class="value">
        <input type="number" value="2" bindchange="setFormData('max', $event)" />
      </view>
    </view>
    <view class="form-item">
      <view class="label">是否匿名投票</view>
      <switch color="#40a9ff" bindchange="setFormData('anonymous', $event)" />
    </view>
    <view class="options">
      <view class="item" wx:for="{{ formData.options }}" wx:key="id">
        <view class="add-image" bindtap="setOptionImage(index)">
          <image src="{{ item.image }}" wx:if="{{ item.image }}" mode="aspectFill"></image>
          <i class="iconfont icon-camera" wx:else></i>
        </view>
        <view class="content">
          <input type="text" class="title" placeholder="请输入标题" wx:model="{{ formData.options[index].title }}" bindchange="setOptionData('title', index, $event)"/>
          <input type="text" class="desc" placeholder="请输入描述-可不填" wx:model="{{ formData.options[index].desc }}" />
        </view>
        <view class="remove" bindtap="remove(index)">
          <i class="iconfont icon-x"></i>
        </view>
      </view>
    </view>
    <view class="add-option" bindtap="addOption">添加选项</view>
    <view class="submit" bindtap="addVote">提交投票</view>
    <!-- 用来压缩图片 -->
    <canvas
      type="2d"
      id="canvas_compress"
      class="canvas-compress"
      style="width: {{canvasCompress.width}}px; height: {{canvasCompress.height}}px"
    />
  </view>
</template>

<script>
import { createPage } from '@mpxjs/core'
import loadImage from '../utils/loadImage'
import compress from '../utils/compress'
import checkImage from '../utils/checkImage'
createPage({
  data: {
    formData: {
      title: '',
      desc: '',
      startTime: '2018-09-01',
      endTime: '2018-10-02',
      min: 1,
      max: 1,
      anonymous: false,
      options: [
        {
          id: new Date().getTime(),
          title: '',
          desc: '',
          image: ''
        }
      ]
    },
    optionAnonymous: [{ value: 1, name: '是' }, { value: 0, name: '否' }],
    canvasCompress: {
      width: 0,
      height: 0
    }
  },
  methods: {
    // 校验表单数据
    validateFormData () {
      if (!this.formData.title || !this.formData.startTime || !this.formData.endTime) {
        wx.showToast({
          title: '请完善表单信息',
          icon: 'none'
        })
        return false
      }
      if (new Date(this.formData.startTime).getTime() >= new Date(this.formData.endTime).getTime()) {
        wx.showToast({
          title: '开始日期必须小于于结束日期',
          icon: 'none'
        })
        return false
      }
      if (this.formData.min > this.formData.max) {
        wx.showToast({
          title: '最小投票数不能大于最大投票数',
          icon: 'none'
        })
        return false
      }
      // 校验选项
      let res = true
      const options = this.formData.options
      for (let i = 0; i < options.length; i++) {
        const elem = options[i]
        if (!elem.title) {
          wx.showToast({
            title: '选项名称不能为空',
            icon: 'none'
          })
          res = false
          break
        }
      }
      return res
    },
    setFormData (key, e) {
      this.formData[key] = e.detail.value
    },
    setOptionData (key, index, e) {
      let value = e.detail.value
      const options = this.formData.options
      if (key === 'title') {
        const finded = options.filter(e => e.title === value)
        if (finded.length > 1) {
          value = ''
          wx.showToast({
            title: '选项名称不能重复',
            icon: 'none'
          })
        }
      }
      options[index][key] = value
      console.log('set-option-data', this.formData.options)
    },
    addOption () {
      console.log('option taped')
      this.formData.options.push({
        id: new Date().getTime(),
        title: '',
        desc: '',
        image: ''
      })
    },
    async addVote () {
      console.log('form-data', this.formData)
      const valid = this.validateFormData()
      if (!valid) return
      console.log('add-vote', this.formData, wx.cloud)
      const res = await wx.cloud.callFunction({
        name: 'addVote',
        data: this.formData
      })
      console.log('result in addVote', res)
    },
    remove (index) {
      if (this.formData.options.length < 2) {
        wx.showToast({
          title: '选项不能为空',
          icon: 'none'
        })
        return
      }
      this.formData.options.splice(index, 1)
    },
    setOptionImage (index) {
      wx.chooseImage({
        count: 1,
        sizeType: ['original', 'compressed'],
        sourceType: ['album', 'camera'],
        success: async res => {
          if (res.errMsg === 'chooseImage:ok') {
            wx.showLoading({ title: '图片加载中' })
            const path = res.tempFilePaths[0]
            console.log('path', res)
            const image = await loadImage.call(this, path, 'canvas_compress')
            const filePath = await compress.call(this, image, 'canvas_compress')
            const imgValid = await checkImage(filePath)
            wx.hideLoading()
            if (!imgValid) return
            console.log('filepath', filePath)
            this.formData.options[index].image = filePath
            // 图片安全检测通过，执行图片插入操作
          }
        }
      })
    }
  },
  onLoad () {
    const today = new Date()
    const tomorrow = new Date(today.getTime() + 24 * 60 * 60 * 1000)
    this.formData.startTime = `${today.getFullYear()}-${today.getMonth() + 1}-${today.getDate()}`
    this.formData.endTime = `${tomorrow.getFullYear()}-${tomorrow.getMonth() + 1}-${tomorrow.getDate()}`
  }
})
</script>

<script type="application/json">
  {
    "navigationBarTitleText": "普通投票",
    "navigationBarTextStyle": "black",
    "navigationBarBackgroundColor": "#ffffff",
    "usingComponents": {
    }
    // "disableScroll" : true
  }
</script>

<style lang="stylus" scoped>
@import url('../assets/iconfont/iconfont.css')

.main
  padding 20rpx
  padding-bottom 130rpx
  &>.title
    font-size 40rpx
    font-weight bold
  &>.desc
    margin 30rpx 0
    width 100%
  .line
    width 100%
    border-top 2rpx solid #e0e0e0
  .form-item
    display flex
    justify-content space-between
    margin 20rpx 0
    .label
      color #999
    .value
      color #333
      text-align right
      font-weight bold
    input
      padding-right 20rpx
      font-weight bold
  .options
    .item
      margin-top 20rpx
      position relative
      border 2rpx solid #f2f2f2
      border-radius 8rpx
      padding 20rpx
      display flex
      .add-image
        overflow hidden
        position relative
        width 96rpx
        height 96rpx
        border-radius 50%
        background #f2f2f2
        border 2rpx solid e0e0e0
        color #dbdbdb
        display flex
        justify-content center
        align-items center
        i
          font-size 50rpx
        image
          width 100%
          height 100%
      .content
        margin-left 20rpx
        .title
          font-size 32rpx
          font-weight bold
        .desc
          font-size 24rpx
      .remove
        position absolute
        right 20rpx
        top 50%
        margin-top -24rpx
        i
          color #e0e0e0
          font-size 32rpx
  .add-option
    border 2rpx solid #f2f2f2
    border-radius 8rpx
    text-align center
    line-height 80rpx
    font-size 28rpx
    color #999
    font-weight bold
    margin-top 20rpx

  .submit
    position fixed
    left 50%
    margin-left -120rpx
    bottom 30rpx
    width 240rpx
    height 80rpx
    border-radius 40rpx
    background #40a9ff
    color white
    font-size 32rpx
    font-weight bold
    text-align center
    line-height 80rpx

  .canvas-compress
    position absolute
    left 0
    top 1000px
</style>
